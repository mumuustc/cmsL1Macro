1) Produce L1Ntuple
   1-1) Set up L1 emulator framework: https://twiki.cern.ch/twiki/bin/view/CMSPublic/SWGuideL1TStage2Instructions (CMSSW_11_0_2 with tag l1t-integration-v103.2 is being used)
        cmsrel CMSSW_11_0_2
        cd CMSSW_11_0_2/src
        cmsenv
        git cms-init
        git remote add cms-l1t-offline git@github.com:cms-l1t-offline/cmssw.git
        git fetch cms-l1t-offline l1t-integration-CMSSW_11_0_2
        git cms-merge-topic -u cms-l1t-offline:l1t-integration-v103.2
        git cms-addpkg L1Trigger/L1TCommon
        git cms-addpkg L1Trigger/L1TMuon
        git clone https://github.com/cms-l1t-offline/L1Trigger-L1TMuon.git L1Trigger/L1TMuon/data
        git cms-addpkg L1Trigger/L1TCalorimeter
        git clone https://github.com/cms-l1t-offline/L1Trigger-L1TCalorimeter.git L1Trigger/L1TCalorimeter/data
   1-2) cp -r cmsL1Macro/ADC  CMSSW_11_0_2/src/
   1-3) cp cmsL1Macro/docmsDriver_CMSSW_11_0_2.sh  CMSSW_11_0_2/src/
   1-4) cp cmsL1Macro/crabMultiConfig_ZB_L1Ntuple.py CMSSW_11_0_2/src/
   1-5) cd CMSSW_11_0_2/src/
   1-6) scram b -j 8
   1-7) ./docmsDriver_CMSSW_11_0_2.sh to generate cmsRun configuration
   1-8) cmsRun l1Ntuple_data2018.py to run a test
   1-9) crab submit crabMultiConfig_ZB_L1Ntuple.py to submit crab job


2) Produce offline event information. You can either use the standard CMS HiForest package or use a simple package only containing needed offline event information
   2-1) Setup CMSSW_10_3_3_patch1 environment
   2-2) cp -r cmsL1Macro/VertexCompositeAnalysis CMSSW_10_3_3_patch1/src
   2-3) cd CMSSW_10_3_3_patch1/src
   2-4) scram b -j 8
   2-5) cd VertexCompositeAnalysis/VertexCompositeAnalyzer/test
   2-6) cmsRun PbPbSkimAndTree2018_EvtInfoOnly_cfg.py
   2-7) crab submit crabMultiConfig_forL1Study_EvtInfoTree.py to submit crab job


3) Combine L1 (HF, calorimeter, etc.) and offline information into plain root tree
   3-1) cd cmsL1Macro/makeTree
   3-2) root -l -b -q makeTree.C+ to do local test
   3-3) ./submitJob.sh to submit condor job (for test purpose, please excute './submitJob_test.sh')


4) For L1 trigger (MB & UPC related triggers) efficiency & rate study
   4-1) EvtTowerInfoNTuple.h and EvtTowerInfoNTuple.C in cmsL1Macro/common directory are genereated by the ROOT MakeClass() function based on the output of step 3-3)
        a) root -l /eos/cms/store/group/phys_heavyions/shuaiy/L1Emulator/L1AndOfflineEvtMatch/L1NtupleRAWEMUCalo_HFAdc_smallStat/output/EvtL1CaloInfo_326776_66.root
        b) EvtTowerInfoNTuple->MakeClass()
        NOTE, the array length of nHCALTPs, nTowers, nHCALTPsEmu, and nTowersEmu in EvtTowerInfoNTuple.h should be modified to be a large number (e.g., 8000) to avoid memory leak
   4-2) root -l -b -q produceHisto.C+ to produce the needed histograms for L1 trigger study, based on the output of step 3-3)
   4-3) root -l -b -q checkMBTrig.C+ to study L1 MB trigger (efficiency & rate)
   4-4) root -l -b -q checkZDCRej.C+ to check ZDC rejection power in L1 MB trigger
   4-5) root -l -b -q checkUPCTrig.C+ to study L1 UPC trigger


5) L1 calorimeter performance study (check various L1 ECal and HCal information between noise and collisions)
   5-1) root -l -b -q 'anaCalo.C+("allData.list", "caloInfo.allData.histo")' to generate histograms of L1 calorimeter information
        -- To run a quick test: root -l -b -q anaCalo.C+
   5-2) root -l -b -q 'plotCaloInfo.C+("caloInfo.allData.histo")' to dump L1 calorimeter related plots 
        -- To process the histograms in caloInfo.test.histo.root: root -l -b -q plotCaloInfo.C+


6) L1 HF noise study
   -- anaNoise.C generates needed L1 HF related histograms by combining L1 infomation and offline event infomation
   -- One can also store the detailed L1 HF information (currently only maximum L1 HF ADCs are stored) in the plain root generated in step 3-3), then the time-consuming L1 and offline matching stuff is not needed to be done over and over again
   6-1) cd cmsL1Macro/HFNoiseStudy
   6-2) root -l -b -q anaNoise.C+ to do local test. The histograms of L1 HF information are generated in this macro. 
   6-3) ./submitJob.sh to submit condor job (for test purpose, please excute './submitJob_test.sh')
   6-4) root -l -b -q plotNoise.C+ to dump L1 HF related plots (please feed the generated root file from step 6-3) to this macro)
